.. _stap:

Једнодимензиони проблем
=========================

Танак штап од хомогеног материјала је окружен изолацијом, тако да се промене температуре у штапу дешавају само као последица размене топлоте ка крајевима штапа и провођења топлоте дуж штапа. Штап је јединичне дужине. Оба краја су изложена мешавини воде и леда температуре 0. Почетна температура на растојању :math:`x` од левог краја штапа је :math:`100\sin{(\pi x)}`, као што се види на :numref:`fdheat`.

.. _fdheat:

.. figure:: fdheat.png
    :width: 80%

    Експериментална поставка проблема провођења топлоте дуж штапа. На крајевима штапа налази се мешавина воде и леда. Штап је изолован од утицаја спољашње средине.

Ради поређења, показаћемо сада како се овај релативно једноставан проблем формулише помоћу класичне методе коначних разлика, а затим ћемо га решити директни и инверзни проблем ФЗНН методом. 

Решавање методом коначних разлика (МКР)
-----------------------------------------

Парцијална диференцијална једначина :math:numref:`eq:toplota1` уз претпоставку да је :math:`\alpha=1` моделује температуру у било којој тачки штапа у било ком временском тренутку према :cite:t:`recktenwald2004finite`. Ова једначина се решава методом коначних разлика која даје апроксимацију решења за распоред температуре, примењујући просторну и временску дискретизацију. Програмска имплементација решења чува температуру сваке тачке дискретизације у дводимензионој матрици. Сваки ред садржи температурну дистрибуцију штапа у неком тренутку времена. Штап је подељен на *n* делова дужине *h*, па стога сваки ред има *n+1* елемената. Што веће *n*, мања је грешка апрокцимације. Време од 0 до *T* је подељено у *m* дискретних интервала дужине *k*, па стога матрица има *m+1* редова, :numref:`fdheat2`.

.. _fdheat1:

.. figure:: fdheat1.png
    :width: 80%

    Како време тече, штап се хлади. Метода коначних разлика омогућава израчунавање температуре у фиксном броју тачака у равномерним временским интервалима. Смањење просторног и временског корака доводи до прецизнијег решења.

.. _fdheat2:

.. figure:: fdheat2.png
    :width: 60%

    Дискретизација једначине провођења топлоте методом коначних разлика

Свака тачка :math:`u_{i,j}`` представља елемент матрице који садржи температуру на позицији :math:`i \cdot h`, у тренутку :math:`j \cdot k`. На крајевима штапа је температура увек нула. У почетном тренутку, температура у тачки *x* је, као што је већ речено, :math:`100\sin{(\pi x)}`. Алгоритам иде корак по корак кроз време, користи вредности из тренутка *j* да би израчунао вредности у тренутку *j+1*. Формула која репрезентује варијанту апроксимације FTCS (*Forward Time Centered Space*) као у :cite:t:`recktenwald2004finite` се овде даје без извођења и гласи:

.. math::
    :label: eq:diskretna

    u_{i,j+1} = R \cdot u_{i-1,j}+(1-2R) \cdot u_{i,j} + R \cdot u_{i+1,j},

где је

.. math::

    R = \frac{k}{h^2}.

Целокупна анализа различитих експлицитних и имплицитних метода дата је на поменутој референци, а кључни део кода у програмском језику Пајтон имплемениран је на следећи начин:

.. code-block:: python
   :linenos:

    def heatFTCS(nt=400, nx=20, alpha=1, L=1, tmax=0.5):
        h = L / (nx - 1)
        k = tmax / (nt - 1)
        r = alpha * k / h**2

        x = np.linspace(0, L, nx)
        t = np.linspace(0, tmax, nt)
        U = np.zeros((nx, nt))

        # Почетни услов
        U[:, 0] = np.sin(np.pi * x / L)

        # Главна петља за МКР
        for m in range(1, nt):
            for i in range(1, nx-1):
                U[i, m] = r * U[i - 1, m - 1] + (1-2*r) * U[i, m-1] + r * U[i+1, m-1]

        # Егзактно решење за поређење
        ue = np.sin(np.pi * x / L) * \
            np.exp(-t[nt - 1] * alpha * (np.pi / L) * (np.pi / L))

Као што је детаљно објашњава :cite:t:`recktenwald2004finite`, ако се МКР петља формулише експлицитно као што је то случај код FTCS технике, мора се пажљиво изабрати временски и просторни корак како би нумеричка пропагација била "бржа" од физичке. Решење се може видети на :numref:`ftcs`.

.. _ftcs:

.. figure:: ftcs.png
    :width: 60%

    Решење које се добија МКР методом користећи експицитну FTCS технику у тренутку *t=0.5s*. 

Експлицитне технике попут FTCS не гарантују конзистентност решења коју гарантују имплицитне технике као што је BTCS (*Backward Time Centered Space*). МКР је устаљени приступ који за већину правилно дефинисаних домена ради веома добро. За овако једноставну поставку као што је једнодимензионо провођење топлоте и када су сви параметри проблема познати (овде је то :math:`\alpha`), МКР је често оптимална метода. Међуутим, код већине проблема из праксе то није случај. Хајде да размотримо како да овај проблем решимо користећи ФЗНН и директно упоредимо са МКР. 

Решавање помоћу ФЗНН
-----------------------------------------

Решење једначине :numref:`fdheat` са граничним и почетним условима:

.. math:: 
    :label: eq:granicni1

    u(0,t)=u(1,t)=0, \, \forall t \\
    u(0,x) = 100\sin{(\pi x)}

потражићемо помоћу ФЗНН приступа. Иако је могуће да методе имплементирамо директно као :cite:t:`raissi2019physics` користећи оквира за дубоко учење као што је `Tensorflow <https://www.tensorflow.org/>`_, користићемо помоћ додатних библиотека које додатно апстрахују ФЗНН ентитете и омогућавају кориснику да се фокусира на проблема који решава. Овај пример решићемо користећи бибиотеку `SCIANN <https://www.sciann.com/>`_ аутора :cite:t:`haghighat2021sciann`. Поступак решавања објаснићемо увидом у код:


